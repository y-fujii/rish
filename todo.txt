language:
	- documentation, documentation, and documentation
	x assignment support with array slicing
		- built-in array slicing operations have been abandoned. just one
		  syntactic sugar is added instead:

			$var(command) -> (yield $var | command)

		  example usage:
		  	$var(index 3)
		  	$var(slice 3 10)
			$var(hash.get key)
			$var(sort | index 0)
		  
	- APL-like (inner|outer)product operators or zip operator?
		$lhs % $rhs
		$lhs ^ $rhs
		$lhs %command $rhs
		$lhs ^command $rhs
	- RDB-like join operator?
	- map/dict type?
	- arithmetic expressions
		@int( $x + 1 == 2 ) => (% "int.==" (% "int.+" $x 1) 2)
		int:( $x + 1 == 2 )

	- built-in commands for strings, such as regex operations
	- pipe/redirection for non-stdin/stdout
	- pipe object
	- multiple pipes support like select(), epoll()
	- lambda expression with lexical scoped break, continue and return?
	- function local current directory
	- zsh like ** expansion
	- restrict wildcard expansion iff strings are started with "./", "../" or "/" ?
		- How about started with $VAR ?

UI:
	- job control
	- (att|det)atch process to std(in|out|err), pipes and files at any time
	- incremental completion
	- completion from command output text
	- quicksilver like command name completion

implementation:
	- fix completely-broken REPL
	- decent thread stopping mechanism
	- error values for rish internal error
	- eliminate unnecessary threads creation
	- static variable names resolution and lock-less variable access
		- the current implementation of lexical scoping is broken
	- efficient MetaString structure to handle GB data in a normal way

not near future ideas:
	- JSON-like data structure support?
		- add ability to manipulate structured data like PowerShell without
		  sacrificing simplicity.
		- pattern matching expression for JSON-like data structures?
			- ref: *Duce, XQuery, etc.
		- pipeline-oriented style does not seem to be very suitable for
		  recursive data structures. support only JSON-to-sequence and
		  sequence-to-JSON transformation with pattern matching?
	- tmux, screen like features?
	- HTML5 terminal?
		- ref: TermKit, etc.
